

# Database for PostgreSql
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.datasource.url=jdbc:postgresql://postgresql.c3mu6ikmiktz.ap-south-1.rds.amazonaws.com/agricultureloan
spring.datasource.url=jdbc:postgresql://localhost:5432/update
spring.datasource.username=postgres
spring.datasource.password=postgresql123
spring.datasource.driver-class-name=org.postgresql.Driver

application.security.jwt.secret_key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

server.port=8082


# SMTP Server Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=allsmart.org@gmail.com
spring.mail.password=wzks xdld dccc yvzj
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true




#This is comes under the Resource so if you use jar file it's works
# Change "upload-directory" to your desired directory path where you want to store the uploaded images.
# This is for cloud using jar file
#upload.path=/home/ubuntu/UserImage

#spring.mvc.static-path-pattern=/UserImage/**
#spring.web.resources.static-locations=file:${upload.path}/


#This is for Local host
upload.path=src/main/resources/UserImage

# To allow serving static resources from the UserImage directory
spring.mvc.static-path-pattern=/UserImage/**
spring.web.resources.static-locations=classpath:/UserImage/



# Set maximum file size in bytes (10 MB in this example)
spring.servlet.multipart.max-file-size=10485760

# Set maximum request size in bytes (10 MB in this example)
spring.servlet.multipart.max-request-size=10485760

